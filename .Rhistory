library(slam)
library(reshape2)
library(plyr)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(data.table)
library(dplyr)
library(data.table)
library(tm)
library(qdap)
library(qdap)
library(ggdendro)
library(wordcloud)
library(RColorBrewer)
library(gridExtra)
qdap_clean <- function(x) {
x <- replace_abbreviation(x)
x <- replace_contraction(x)
x <- replace_ordinal(x)
x <- replace_symbol(x)
x <- tolower(x)
return(x)
}
color_palette <-  brewer.pal(12, 'Paired')
reviews <- fread("ScoredReviews.csv", header = TRUE, stringsAsFactors = FALSE)
variables <- colnames(reviews)
variables[2] <- "V2"
names(reviews) <- variables
reviews_with_sentiment <- reviews %>% select(anger, anticipation, disgust, fear,
joy, sadness, surprise, trust,
negative, positive, is_helpful, Id)
melted <- melt(reviews_with_sentiment, id.vars=c("Id", "is_helpful"))
means <- ddply(melted, c("is_helpful", "variable"), summarise, mean=mean(value))
rm(reviews)
rm(reviews_with_sentiment)
ggplot(data = means, aes(x = factor(is_helpful), y = mean)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = variable)) +
scale_fill_manual(values = color_palette)
reviews <- fread("ScoredReviews.csv", header = TRUE, stringsAsFactors = FALSE)
helpful_reviews <- reviews %>% filter(is_helpful == 1)
variables <- colnames(reviews)
variables[2] <- "V2"
helpful_reviews <- reviews %>% filter(is_helpful == 1)
names(reviews)
variables <- colnames(reviews)
variables[2] <- "V2"
names(reviews) <- variables
names(reviews)
helpful_reviews <- reviews %>% filter(is_helpful == 1)
unhelpful_reviews <- reviews %>% filter(is_helpful == 0)
helpful   <- qdap_clean(helpful_reviews$Text)
rm(melted)
unhelpful <- qdap_clean(unhelpful_reviews$Text)
my_stopwords <- c(stopwords('english'))
helpful.corpus <- Corpus(VectorSource(helpful))
helpful.corpus <- tm_map(helpful.corpus, removePunctuation)
helpful.corpus <- tm_map(helpful.corpus, removeWords, my_stopwords)
helpful.dtm <- TermDocumentMatrix(helpful.corpus)
helpful.dtm <- TermDocumentMatrix(helpful.corpus)
helpful.dtm2 <- removeSparseTerms(helpful.dtm, sparse=0.95)
helpful.df <- as.data.frame(inspect(helpful.dtm2))
helpful.df.scale <- scale(helpful.df)
helpful_d <- dist(helpful.df.scale, method = "euclidean")
helpful_fit <- hclust(helpful_d, method="ward.D")
unhelpful.corpus <- Corpus(VectorSource(unhelpful))
unhelpful.corpus <- tm_map(unhelpful.corpus, removePunctuation)
unhelpful.corpus <- tm_map(unhelpful.corpus, removeWords, my_stopwords)
unhelpful.dtm <- TermDocumentMatrix(unhelpful.corpus)
unhelpful.dtm2 <- removeSparseTerms(unhelpful.dtm, sparse=0.95)
unhelpful.df <- as.data.frame(inspect(unhelpful.dtm2))
unhelpful.df.scale <- scale(unhelpful.df)
unhelpful_d <- dist(unhelpful.df.scale, method = "euclidean")
unhelpful_fit <- hclust(unhelpful_d, method="ward.D")
my_stopwords <- c(stopwords('english'), 'amazon', 'like', 'coffee', 'taste', 'food', 'will', 'flavor', 'product', 'one', 'can', 'just', 'good', 'really', 'tea', 'much', 'love', 'also', 'great', 'tried', 'get', 'use', 'time', 'even', 'try', 'now', 'make', 'little', 'buy', 'better', 'well', 'way', 'water', 'cup', 'price', 'made', 'found', 'find', 'first', 'eat', 'dog', 'chocolate', 'box', 'bought', 'bag', 'tastes', 'best', 'used', 'two', 'think', 'thought', 'sweet', 'sugar', 'still', 'know', 'drink', 'dot')
helpful.corpus <- tm_map(helpful.corpus, removeWords, my_stopwords)
unhelpful.corpus <- tm_map(unhelpful.corpus, removeWords, my_stopwords)
helpful.corpus <- tm_map(helpful.corpus, stemDocument)
unhelpful.corpus <- tm_map(unhelpful.corpus, stemDocument)
helpful.dtm <- TermDocumentMatrix(helpful.corpus)
unhelpful.dtm <- TermDocumentMatrix(unhelpful.corpus)
slam::row_sums(helpful.dtm, na.rm=T)
helpful_frequency   <- slam::row_sums(helpful.dtm, na.rm=T)
unhelpful_frequency <- slam::row_sums(unhelpful.dtm, na.rm=T)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 20))
par(mar=rep(0, 4))
plot.new()
wordcloud(names(helpful_frequency),
helpful_frequency,
max.words = 25,
colors=color_palette)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 20))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "Helpful Reviews")
wordcloud(names(helpful_frequency),
helpful_frequency,
max.words = 25,
colors=color_palette)
helpful_df <- data.frame(word = names(helpful_frequency),
count = helpful_frequency) %>%
arrange(desc(count)) %>%
top_n(20)
unhelpful_df <- data.frame(word = names(unhelpful_frequency),
count = unhelpful_frequency) %>%
arrange(desc(count)) %>%
top_n(20)
helpful_word_plot <- ggplot(helpful_df,
aes(x = word, y = count)) +
geom_bar(aes(alpha = count),
stat="identity",
fill = color_palette[[1]]) +
coord_flip() +
labs(x = NULL, y = "count", title = "Helpful") +
scale_alpha_continuous(range = c(0.6, 1), guide = FALSE)
helpful_word_plot
helpful_word_plot <- ggplot(helpful_df,
aes(x = reorder(word, -count), y = count)) +
geom_bar(aes(alpha = count),
stat="identity",
fill = color_palette[[1]]) +
coord_flip() +
labs(x = NULL, y = "count", title = "Helpful") +
scale_alpha_continuous(range = c(0.6, 1), guide = FALSE)
helpful_word_plot
helpful_word_plot <- ggplot(helpful_df,
aes(x = reorder(word, count), y = count)) +
geom_bar(aes(alpha = count),
stat="identity",
fill = color_palette[[1]]) +
coord_flip() +
labs(x = NULL, y = "count", title = "Helpful") +
scale_alpha_continuous(range = c(0.6, 1), guide = FALSE)
helpful_word_plot
unhelpful_word_plot <- ggplot(unhelpful_df,
aes(x = reorder(word, count), y = count)) +
geom_bar(aes(alpha = count),
stat="identity",
fill = color_palette[[2]]) +
coord_flip() +
labs(x = NULL, y = "count", title = "Unhelpful") +
scale_alpha_continuous(range = c(0.6, 1), guide = FALSE)
grid.arrange(helpful_word_plot, unhelpful_word_plot, ncol = 2)
?reorder
ggdendrogram(helpful_fit, rotate = TRUE) +
labs(title = "Unhelpful Reviews")
